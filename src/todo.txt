

Checkerify
StackMirror
Flood(Image, color) default fill black
RemoveColor, change col to black
Connect dots (vertical, horisontal mask)
MakeAnotherBorder
ColNearest
FillNearest
GetPeriod

Inverse checkerify
Inverse align
Inverse functions
Inverse replaceColors
Inverse colShape(. ,. )
Inverse (partial) myStack / rigidStack / repeat / wrap / etc
Inverse outerProduct
Inverse broadcast?
Inverse smear
Inverse square -> line
Inverse compress / embed
Inverse symmetries?
Inverse single pixel colors using local information
Inverse mappings (col2col, shape2col, col2shape, shape2shape)
Inverse grid
Inverse column / row / diagonal rules
Inverse growing corners

Long term
Meet-in-the-middle!



New plan:
Specialized solver for output shape


Figure out why I'm doing worse on LB! Depth 3 is better



2 argument functions can only take a parent in the function tree as second argument (maybe even in + out + loop base?), or output shape where applicable

repeat
mirror
broadcast
embed
wrap


Specialized solver handles movement (myStack, align, Move) and compose (0-4). Possibly also colShape with constant color
 - Aligned / moved images must fit in every non-black pixel

Specialized reductions from:
outerProduct 6%
replaceTemplate + swapTemplate 14%
greedyFill + extend2 7%
for each shape in input 7%

Move + align 11%

border and similar?
normalizeRigid
mappings



Size solver:
Add products of two seeds


Find a way to reduce memory for "embed 1"
reduce count()
Fix slow functions:
  insideMarked
  splitAll, cut
  heuristicCut
  gravity
  more?
Limit gravity (it's not more important than the other split functions)
check if greedyFillBlack is slow in compose2 (it's usually not)

add pickUnique :)
  Symmetric
  Not symmetric
  Unique color

Find a consistent way to limit size of vectors of images that allows splitCols to function on large inputs with many colors (like image infill tasks) :)

Make benchmark to detect slow functions :)
 - Recursion is apparently slow
 - smear is slow (implement row-wise?)

Optimizations:
 - colShape only as last step and only colors which can actually occur / as part of compose step :)
 - set MAXSIDE, MAXAREA, MAXPIXELS per example based on expected sizes :)








Separate pixel solver
 - Improve greedy_compose by gini index heuristic from Random Forests? :(

Add xy-flipped images to training set (possibly only when some heuristic is satisfied)
 +3 LB!

Add intersection at depth 2 (more binary functions?)
 - Looks like it hides more important transformations somehow :(

Divide into shapes as preprocessing?
